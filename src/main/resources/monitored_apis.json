{
	"apis": [
		{
			"className": "android.app.ActivityThread",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.app.ActivityThread->installContentProviders",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/app/ActivityThread;->installContentProviders(Landroid/content/Context;Ljava/util/List;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.app.ActivityThread';mthd: 'installContentProviders';retCls: 'void';params: 'android.content.Context' '\" +objectToString(p0)+ \"' 'java.util.List' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "installContentProviders",
			"paramList": [
				"android.content.Context",
				"java.util.List"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_app_ActivityThread_installContentProviders_53(Object _this , android.content.Context p0, java.util.List p1)"
		},
		{
			"className": "android.app.ActivityManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.app.ActivityManager->getRecentTasks",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (java.util.List)  (java.util.List) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/app/ActivityManager;->getRecentTasks(II)Ljava/util/List;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.app.ActivityManager';mthd: 'getRecentTasks';retCls: 'java.util.List';params: 'int' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getRecentTasks",
			"paramList": [
				"int",
				"int"
			],
			"platformVersion": "All",
			"returnType": "java.util.List",
			"signature": "redir_android_app_ActivityManager_getRecentTasks_54(Object _this , int p0, int p1)"
		},
		{
			"className": "android.app.ActivityManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.app.ActivityManager->getRunningTasks",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (java.util.List)  (java.util.List) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.app.ActivityManager';mthd: 'getRunningTasks';retCls: 'java.util.List';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getRunningTasks",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "java.util.List",
			"signature": "redir_android_app_ActivityManager_getRunningTasks_55(Object _this , int p0)"
		},
		{
			"className": "android.bluetooth.BluetoothHeadset",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.bluetooth.BluetoothHeadset->startVoiceRecognition",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/bluetooth/BluetoothHeadset;->startVoiceRecognition(Landroid/bluetooth/BluetoothDevice;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.bluetooth.BluetoothHeadset';mthd: 'startVoiceRecognition';retCls: 'boolean';params: 'android.bluetooth.BluetoothDevice' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "startVoiceRecognition",
			"paramList": [
				"android.bluetooth.BluetoothDevice"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_bluetooth_BluetoothHeadset_startVoiceRecognition_74(Object _this , android.bluetooth.BluetoothDevice p0)"
		},
		{
			"className": "android.bluetooth.BluetoothHeadset",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.bluetooth.BluetoothHeadset->stopVoiceRecognition",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/bluetooth/BluetoothHeadset;->stopVoiceRecognition(Landroid/bluetooth/BluetoothDevice;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.bluetooth.BluetoothHeadset';mthd: 'stopVoiceRecognition';retCls: 'boolean';params: 'android.bluetooth.BluetoothDevice' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "stopVoiceRecognition",
			"paramList": [
				"android.bluetooth.BluetoothDevice"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_bluetooth_BluetoothHeadset_stopVoiceRecognition_75(Object _this , android.bluetooth.BluetoothDevice p0)"
		},
		{
			"className": "android.hardware.Camera",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.hardware.Camera->open",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invokeStatic (p0);\n        return (android.hardware.Camera)  (android.hardware.Camera) returnVal;\n    ",
			"isStatic": true,
			"jniSignature": "Landroid/hardware/Camera;->open(I)Landroid/hardware/Camera; static",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.hardware.Camera';mthd: 'open';retCls: 'android.hardware.Camera';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "open",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "android.hardware.Camera",
			"signature": "redir_android_hardware_Camera_open_97(int p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->addGpsStatusListener",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->addGpsStatusListener(Landroid/location/GpsStatus$Listener;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'addGpsStatusListener';retCls: 'boolean';params: 'android.location.GpsStatus.Listener' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "addGpsStatusListener",
			"paramList": [
				"android.location.GpsStatus.Listener"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_location_LocationManager_addGpsStatusListener_99(Object _this , android.location.GpsStatus.Listener p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->addNmeaListener",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->addNmeaListener(Landroid/location/GpsStatus$NmeaListener;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'addNmeaListener';retCls: 'boolean';params: 'android.location.GpsStatus.NmeaListener' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "addNmeaListener",
			"paramList": [
				"android.location.GpsStatus.NmeaListener"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_location_LocationManager_addNmeaListener_100(Object _this , android.location.GpsStatus.NmeaListener p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->addProximityAlert",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->addProximityAlert(DDFJLandroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'addProximityAlert';retCls: 'void';params: 'double' '\" +objectToString(p0)+ \"' 'double' '\" +objectToString(p1)+ \"' 'float' '\" +objectToString(p2)+ \"' 'long' '\" +objectToString(p3)+ \"' 'android.app.PendingIntent' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "addProximityAlert",
			"paramList": [
				"double",
				"double",
				"float",
				"long",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_addProximityAlert_101(Object _this , double p0, double p1, float p2, long p3, android.app.PendingIntent p4)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->addTestProvider",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->addTestProvider(Ljava/lang/String;ZZZZZZZII)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'addTestProvider';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"' 'boolean' '\" +objectToString(p2)+ \"' 'boolean' '\" +objectToString(p3)+ \"' 'boolean' '\" +objectToString(p4)+ \"' 'boolean' '\" +objectToString(p5)+ \"' 'boolean' '\" +objectToString(p6)+ \"' 'boolean' '\" +objectToString(p7)+ \"' 'int' '\" +objectToString(p8)+ \"' 'int' '\" +objectToString(p9)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "addTestProvider",
			"paramList": [
				"java.lang.String",
				"boolean",
				"boolean",
				"boolean",
				"boolean",
				"boolean",
				"boolean",
				"boolean",
				"int",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_addTestProvider_102(Object _this , java.lang.String p0, boolean p1, boolean p2, boolean p3, boolean p4, boolean p5, boolean p6, boolean p7, int p8, int p9)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->clearTestProviderEnabled",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->clearTestProviderEnabled(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'clearTestProviderEnabled';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "clearTestProviderEnabled",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_clearTestProviderEnabled_103(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->clearTestProviderLocation",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->clearTestProviderLocation(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'clearTestProviderLocation';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "clearTestProviderLocation",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_clearTestProviderLocation_104(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->clearTestProviderStatus",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->clearTestProviderStatus(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'clearTestProviderStatus';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "clearTestProviderStatus",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_clearTestProviderStatus_105(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->getBestProvider",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->getBestProvider(Landroid/location/Criteria;Z)Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'getBestProvider';retCls: 'java.lang.String';params: 'android.location.Criteria' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getBestProvider",
			"paramList": [
				"android.location.Criteria",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_location_LocationManager_getBestProvider_106(Object _this , android.location.Criteria p0, boolean p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->getLastKnownLocation",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (android.location.Location)  (android.location.Location) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->getLastKnownLocation(Ljava/lang/String;)Landroid/location/Location;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'getLastKnownLocation';retCls: 'android.location.Location';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getLastKnownLocation",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "android.location.Location",
			"signature": "redir_android_location_LocationManager_getLastKnownLocation_107(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->getProvider",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (android.location.LocationProvider)  (android.location.LocationProvider) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->getProvider(Ljava/lang/String;)Landroid/location/LocationProvider;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'getProvider';retCls: 'android.location.LocationProvider';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getProvider",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "android.location.LocationProvider",
			"signature": "redir_android_location_LocationManager_getProvider_108(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->getProviders",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (java.util.List)  (java.util.List) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->getProviders(Landroid/location/Criteria;Z)Ljava/util/List;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'getProviders';retCls: 'java.util.List';params: 'android.location.Criteria' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getProviders",
			"paramList": [
				"android.location.Criteria",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "java.util.List",
			"signature": "redir_android_location_LocationManager_getProviders_109(Object _this , android.location.Criteria p0, boolean p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->getProviders",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (java.util.List)  (java.util.List) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->getProviders(Z)Ljava/util/List;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'getProviders';retCls: 'java.util.List';params: 'boolean' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getProviders",
			"paramList": [
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "java.util.List",
			"signature": "redir_android_location_LocationManager_getProviders_110(Object _this , boolean p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->isProviderEnabled",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->isProviderEnabled(Ljava/lang/String;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'isProviderEnabled';retCls: 'boolean';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "isProviderEnabled",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_location_LocationManager_isProviderEnabled_111(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->removeTestProvider",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->removeTestProvider(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'removeTestProvider';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "removeTestProvider",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_removeTestProvider_112(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestLocationUpdates",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestLocationUpdates';retCls: 'void';params: 'long' '\" +objectToString(p0)+ \"' 'float' '\" +objectToString(p1)+ \"' 'android.location.Criteria' '\" +objectToString(p2)+ \"' 'android.app.PendingIntent' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestLocationUpdates",
			"paramList": [
				"long",
				"float",
				"android.location.Criteria",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestLocationUpdates_113(Object _this , long p0, float p1, android.location.Criteria p2, android.app.PendingIntent p3)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestLocationUpdates",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestLocationUpdates(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestLocationUpdates';retCls: 'void';params: 'long' '\" +objectToString(p0)+ \"' 'float' '\" +objectToString(p1)+ \"' 'android.location.Criteria' '\" +objectToString(p2)+ \"' 'android.location.LocationListener' '\" +objectToString(p3)+ \"' 'android.os.Looper' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestLocationUpdates",
			"paramList": [
				"long",
				"float",
				"android.location.Criteria",
				"android.location.LocationListener",
				"android.os.Looper"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestLocationUpdates_114(Object _this , long p0, float p1, android.location.Criteria p2, android.location.LocationListener p3, android.os.Looper p4)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestLocationUpdates",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestLocationUpdates';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'long' '\" +objectToString(p1)+ \"' 'float' '\" +objectToString(p2)+ \"' 'android.app.PendingIntent' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestLocationUpdates",
			"paramList": [
				"java.lang.String",
				"long",
				"float",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestLocationUpdates_115(Object _this , java.lang.String p0, long p1, float p2, android.app.PendingIntent p3)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestLocationUpdates",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestLocationUpdates';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'long' '\" +objectToString(p1)+ \"' 'float' '\" +objectToString(p2)+ \"' 'android.location.LocationListener' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestLocationUpdates",
			"paramList": [
				"java.lang.String",
				"long",
				"float",
				"android.location.LocationListener"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestLocationUpdates_116(Object _this , java.lang.String p0, long p1, float p2, android.location.LocationListener p3)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestLocationUpdates",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestLocationUpdates(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestLocationUpdates';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'long' '\" +objectToString(p1)+ \"' 'float' '\" +objectToString(p2)+ \"' 'android.location.LocationListener' '\" +objectToString(p3)+ \"' 'android.os.Looper' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestLocationUpdates",
			"paramList": [
				"java.lang.String",
				"long",
				"float",
				"android.location.LocationListener",
				"android.os.Looper"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestLocationUpdates_117(Object _this , java.lang.String p0, long p1, float p2, android.location.LocationListener p3, android.os.Looper p4)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestSingleUpdate",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestSingleUpdate';retCls: 'void';params: 'android.location.Criteria' '\" +objectToString(p0)+ \"' 'android.app.PendingIntent' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestSingleUpdate",
			"paramList": [
				"android.location.Criteria",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestSingleUpdate_118(Object _this , android.location.Criteria p0, android.app.PendingIntent p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestSingleUpdate",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestSingleUpdate(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestSingleUpdate';retCls: 'void';params: 'android.location.Criteria' '\" +objectToString(p0)+ \"' 'android.location.LocationListener' '\" +objectToString(p1)+ \"' 'android.os.Looper' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestSingleUpdate",
			"paramList": [
				"android.location.Criteria",
				"android.location.LocationListener",
				"android.os.Looper"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestSingleUpdate_119(Object _this , android.location.Criteria p0, android.location.LocationListener p1, android.os.Looper p2)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestSingleUpdate",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestSingleUpdate';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'android.app.PendingIntent' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestSingleUpdate",
			"paramList": [
				"java.lang.String",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestSingleUpdate_120(Object _this , java.lang.String p0, android.app.PendingIntent p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->requestSingleUpdate",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->requestSingleUpdate(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'requestSingleUpdate';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'android.location.LocationListener' '\" +objectToString(p1)+ \"' 'android.os.Looper' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestSingleUpdate",
			"paramList": [
				"java.lang.String",
				"android.location.LocationListener",
				"android.os.Looper"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_requestSingleUpdate_121(Object _this , java.lang.String p0, android.location.LocationListener p1, android.os.Looper p2)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->sendExtraCommand",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->sendExtraCommand(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'sendExtraCommand';retCls: 'boolean';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'android.os.Bundle' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "sendExtraCommand",
			"paramList": [
				"java.lang.String",
				"java.lang.String",
				"android.os.Bundle"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_location_LocationManager_sendExtraCommand_122(Object _this , java.lang.String p0, java.lang.String p1, android.os.Bundle p2)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->setTestProviderEnabled",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->setTestProviderEnabled(Ljava/lang/String;Z)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'setTestProviderEnabled';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setTestProviderEnabled",
			"paramList": [
				"java.lang.String",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_setTestProviderEnabled_123(Object _this , java.lang.String p0, boolean p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->setTestProviderLocation",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->setTestProviderLocation(Ljava/lang/String;Landroid/location/Location;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'setTestProviderLocation';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'android.location.Location' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setTestProviderLocation",
			"paramList": [
				"java.lang.String",
				"android.location.Location"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_setTestProviderLocation_124(Object _this , java.lang.String p0, android.location.Location p1)"
		},
		{
			"className": "android.location.LocationManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.location.LocationManager->setTestProviderStatus",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/location/LocationManager;->setTestProviderStatus(Ljava/lang/String;ILandroid/os/Bundle;J)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.location.LocationManager';mthd: 'setTestProviderStatus';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'android.os.Bundle' '\" +objectToString(p2)+ \"' 'long' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setTestProviderStatus",
			"paramList": [
				"java.lang.String",
				"int",
				"android.os.Bundle",
				"long"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_location_LocationManager_setTestProviderStatus_125(Object _this , java.lang.String p0, int p1, android.os.Bundle p2, long p3)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->isBluetoothA2dpOn",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->isBluetoothA2dpOn()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'isBluetoothA2dpOn';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "isBluetoothA2dpOn",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_media_AudioManager_isBluetoothA2dpOn_126(Object _this )"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->isWiredHeadsetOn",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->isWiredHeadsetOn()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'isWiredHeadsetOn';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "isWiredHeadsetOn",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_media_AudioManager_isWiredHeadsetOn_127(Object _this )"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setBluetoothScoOn",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setBluetoothScoOn(Z)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setBluetoothScoOn';retCls: 'void';params: 'boolean' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setBluetoothScoOn",
			"paramList": [
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setBluetoothScoOn_128(Object _this , boolean p0)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setMicrophoneMute",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setMicrophoneMute(Z)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setMicrophoneMute';retCls: 'void';params: 'boolean' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setMicrophoneMute",
			"paramList": [
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setMicrophoneMute_129(Object _this , boolean p0)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setMode",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setMode(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setMode';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setMode",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setMode_130(Object _this , int p0)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setParameter",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setParameter(Ljava/lang/String;Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setParameter';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setParameter",
			"paramList": [
				"java.lang.String",
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setParameter_131(Object _this , java.lang.String p0, java.lang.String p1)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setParameters",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setParameters(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setParameters';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setParameters",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setParameters_132(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->setSpeakerphoneOn",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->setSpeakerphoneOn(Z)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'setSpeakerphoneOn';retCls: 'void';params: 'boolean' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setSpeakerphoneOn",
			"paramList": [
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_setSpeakerphoneOn_133(Object _this , boolean p0)"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->startBluetoothSco",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->startBluetoothSco()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'startBluetoothSco';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "startBluetoothSco",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_startBluetoothSco_134(Object _this )"
		},
		{
			"className": "android.media.AudioManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioManager->stopBluetoothSco",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioManager;->stopBluetoothSco()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioManager';mthd: 'stopBluetoothSco';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "stopBluetoothSco",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioManager_stopBluetoothSco_135(Object _this )"
		},
		{
			"className": "android.media.AudioRecord",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.AudioRecord-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/AudioRecord;-><init>(IIIII)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.AudioRecord';mthd: '<init>';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'int' '\" +objectToString(p2)+ \"' 'int' '\" +objectToString(p3)+ \"' 'int' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"int",
				"int",
				"int",
				"int",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_AudioRecord__ctor_136(Object _this , int p0, int p1, int p2, int p3, int p4)"
		},
		{
			"className": "android.media.MediaPlayer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.MediaPlayer->setWakeMode",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/MediaPlayer;->setWakeMode(Landroid/content/Context;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.MediaPlayer';mthd: 'setWakeMode';retCls: 'void';params: 'android.content.Context' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setWakeMode",
			"paramList": [
				"android.content.Context",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_MediaPlayer_setWakeMode_137(Object _this , android.content.Context p0, int p1)"
		},
		{
			"className": "android.media.MediaRecorder",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.MediaRecorder->setAudioSource",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/MediaRecorder;->setAudioSource(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.MediaRecorder';mthd: 'setAudioSource';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setAudioSource",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_MediaRecorder_setAudioSource_138(Object _this , int p0)"
		},
		{
			"className": "android.media.MediaRecorder",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.media.MediaRecorder->setVideoSource",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/media/MediaRecorder;->setVideoSource(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.media.MediaRecorder';mthd: 'setVideoSource';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setVideoSource",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_media_MediaRecorder_setVideoSource_139(Object _this , int p0)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->requestRouteToHost",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->requestRouteToHost(II)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'requestRouteToHost';retCls: 'boolean';params: 'int' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "requestRouteToHost",
			"paramList": [
				"int",
				"int"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_ConnectivityManager_requestRouteToHost_140(Object _this , int p0, int p1)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->setNetworkPreference",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->setNetworkPreference(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'setNetworkPreference';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setNetworkPreference",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_net_ConnectivityManager_setNetworkPreference_148(Object _this , int p0)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->startUsingNetworkFeature",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->startUsingNetworkFeature(ILjava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'startUsingNetworkFeature';retCls: 'int';params: 'int' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "startUsingNetworkFeature",
			"paramList": [
				"int",
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_net_ConnectivityManager_startUsingNetworkFeature_180(Object _this , int p0, java.lang.String p1)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->stopUsingNetworkFeature",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->stopUsingNetworkFeature(ILjava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'stopUsingNetworkFeature';retCls: 'int';params: 'int' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "stopUsingNetworkFeature",
			"paramList": [
				"int",
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_net_ConnectivityManager_stopUsingNetworkFeature_181(Object _this , int p0, java.lang.String p1)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->tether",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->tether(Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'tether';retCls: 'int';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "tether",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_net_ConnectivityManager_tether_182(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.net.ConnectivityManager",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.ConnectivityManager->untether",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/ConnectivityManager;->untether(Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.ConnectivityManager';mthd: 'untether';retCls: 'int';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "untether",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_net_ConnectivityManager_untether_183(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.net.wifi.WifiManager$MulticastLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager$MulticastLock->acquire",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager$MulticastLock;->acquire()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager$MulticastLock';mthd: 'acquire';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "acquire",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_net_wifi_WifiManager$MulticastLock_acquire_206(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager$MulticastLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager$MulticastLock->release",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager$MulticastLock;->release()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager$MulticastLock';mthd: 'release';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "release",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_net_wifi_WifiManager$MulticastLock_release_207(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager$WifiLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager$WifiLock->acquire",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager$WifiLock;->acquire()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager$WifiLock';mthd: 'acquire';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "acquire",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_net_wifi_WifiManager$WifiLock_acquire_208(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager$WifiLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager$WifiLock->release",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager$WifiLock;->release()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager$WifiLock';mthd: 'release';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "release",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_net_wifi_WifiManager$WifiLock_release_209(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->addNetwork",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->addNetwork(Landroid/net/wifi/WifiConfiguration;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'addNetwork';retCls: 'int';params: 'android.net.wifi.WifiConfiguration' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "addNetwork",
			"paramList": [
				"android.net.wifi.WifiConfiguration"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_net_wifi_WifiManager_addNetwork_210(Object _this , android.net.wifi.WifiConfiguration p0)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->disableNetwork",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->disableNetwork(I)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'disableNetwork';retCls: 'boolean';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "disableNetwork",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_disableNetwork_211(Object _this , int p0)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->disconnect",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->disconnect()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'disconnect';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "disconnect",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_disconnect_212(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->enableNetwork",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->enableNetwork(IZ)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'enableNetwork';retCls: 'boolean';params: 'int' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "enableNetwork",
			"paramList": [
				"int",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_enableNetwork_213(Object _this , int p0, boolean p1)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->initializeMulticastFiltering",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->initializeMulticastFiltering()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'initializeMulticastFiltering';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "initializeMulticastFiltering",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_initializeMulticastFiltering_214(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->pingSupplicant",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->pingSupplicant()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'pingSupplicant';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "pingSupplicant",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_pingSupplicant_215(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->reassociate",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->reassociate()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'reassociate';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "reassociate",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_reassociate_216(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->reconnect",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->reconnect()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'reconnect';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "reconnect",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_reconnect_217(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->removeNetwork",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->removeNetwork(I)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'removeNetwork';retCls: 'boolean';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "removeNetwork",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_removeNetwork_218(Object _this , int p0)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->saveConfiguration",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->saveConfiguration()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'saveConfiguration';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "saveConfiguration",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_saveConfiguration_219(Object _this )"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->setWifiApEnabled",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->setWifiApEnabled(Landroid/net/wifi/WifiConfiguration;Z)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'setWifiApEnabled';retCls: 'boolean';params: 'android.net.wifi.WifiConfiguration' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setWifiApEnabled",
			"paramList": [
				"android.net.wifi.WifiConfiguration",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_setWifiApEnabled_220(Object _this , android.net.wifi.WifiConfiguration p0, boolean p1)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->setWifiEnabled",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->setWifiEnabled(Z)Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'setWifiEnabled';retCls: 'boolean';params: 'boolean' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "setWifiEnabled",
			"paramList": [
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_setWifiEnabled_221(Object _this , boolean p0)"
		},
		{
			"className": "android.net.wifi.WifiManager",
			"defaultReturnValue": "false",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.net.wifi.WifiManager->startScan",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (Boolean)  (Boolean) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/net/wifi/WifiManager;->startScan()Z",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.net.wifi.WifiManager';mthd: 'startScan';retCls: 'boolean';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "startScan",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "boolean",
			"signature": "redir_android_net_wifi_WifiManager_startScan_222(Object _this )"
		},
		{
			"className": "android.os.PowerManager$WakeLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.os.PowerManager$WakeLock->acquire",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/os/PowerManager$WakeLock;->acquire()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.os.PowerManager$WakeLock';mthd: 'acquire';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "acquire",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_os_PowerManager$WakeLock_acquire_232(Object _this )"
		},
		{
			"className": "android.os.PowerManager$WakeLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.os.PowerManager$WakeLock->acquire",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/os/PowerManager$WakeLock;->acquire(J)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.os.PowerManager$WakeLock';mthd: 'acquire';retCls: 'void';params: 'long' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "acquire",
			"paramList": [
				"long"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_os_PowerManager$WakeLock_acquire_233(Object _this , long p0)"
		},
		{
			"className": "android.os.PowerManager$WakeLock",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.os.PowerManager$WakeLock->release",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/os/PowerManager$WakeLock;->release(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.os.PowerManager$WakeLock';mthd: 'release';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "release",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_os_PowerManager$WakeLock_release_239(Object _this , int p0)"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->cancel",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->cancel()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'cancel';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "cancel",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_cancel_250(Object _this )"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->handleCancelMessage",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->handleCancelMessage()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'handleCancelMessage';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "handleCancelMessage",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_handleCancelMessage_251(Object _this )"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->handleStartListening",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->handleStartListening(Landroid/content/Intent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'handleStartListening';retCls: 'void';params: 'android.content.Intent' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "handleStartListening",
			"paramList": [
				"android.content.Intent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_handleStartListening_252(Object _this , android.content.Intent p0)"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->handleStopMessage",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->handleStopMessage()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'handleStopMessage';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "handleStopMessage",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_handleStopMessage_253(Object _this )"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->startListening",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->startListening(Landroid/content/Intent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'startListening';retCls: 'void';params: 'android.content.Intent' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "startListening",
			"paramList": [
				"android.content.Intent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_startListening_254(Object _this , android.content.Intent p0)"
		},
		{
			"className": "android.speech.SpeechRecognizer",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.speech.SpeechRecognizer->stopListening",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/speech/SpeechRecognizer;->stopListening()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.speech.SpeechRecognizer';mthd: 'stopListening';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "stopListening",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_speech_SpeechRecognizer_stopListening_255(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getCellLocation",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (android.telephony.CellLocation)  (android.telephony.CellLocation) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getCellLocation()Landroid/telephony/CellLocation;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getCellLocation';retCls: 'android.telephony.CellLocation';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getCellLocation",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "android.telephony.CellLocation",
			"signature": "redir_android_telephony_TelephonyManager_getCellLocation_291(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getDeviceId",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getDeviceId()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getDeviceId';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getDeviceId",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getDeviceId_292(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getDeviceSoftwareVersion",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getDeviceSoftwareVersion()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getDeviceSoftwareVersion';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getDeviceSoftwareVersion",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getDeviceSoftwareVersion_293(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getLine1Number",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getLine1Number()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getLine1Number';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getLine1Number",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getLine1Number_294(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getNeighboringCellInfo",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.util.List)  (java.util.List) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getNeighboringCellInfo()Ljava/util/List;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getNeighboringCellInfo';retCls: 'java.util.List';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getNeighboringCellInfo",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.util.List",
			"signature": "redir_android_telephony_TelephonyManager_getNeighboringCellInfo_295(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getSimSerialNumber",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getSimSerialNumber()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getSimSerialNumber';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getSimSerialNumber",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getSimSerialNumber_296(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getSubscriberId",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getSubscriberId()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getSubscriberId';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getSubscriberId",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getSubscriberId_297(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getVoiceMailAlphaTag",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getVoiceMailAlphaTag()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getVoiceMailAlphaTag';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getVoiceMailAlphaTag",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getVoiceMailAlphaTag_298(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "\"\"",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->getVoiceMailNumber",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.lang.String)  (java.lang.String) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->getVoiceMailNumber()Ljava/lang/String;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'getVoiceMailNumber';retCls: 'java.lang.String';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "getVoiceMailNumber",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.lang.String",
			"signature": "redir_android_telephony_TelephonyManager_getVoiceMailNumber_299(Object _this )"
		},
		{
			"className": "android.telephony.TelephonyManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.TelephonyManager->listen",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/TelephonyManager;->listen(Landroid/telephony/PhoneStateListener;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.TelephonyManager';mthd: 'listen';retCls: 'void';params: 'android.telephony.PhoneStateListener' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "listen",
			"paramList": [
				"android.telephony.PhoneStateListener",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_telephony_TelephonyManager_listen_300(Object _this , android.telephony.PhoneStateListener p0, int p1)"
		},
		{
			"className": "android.webkit.WebView",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.webkit.WebView->loadDataWithBaseURL",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/webkit/WebView;->loadDataWithBaseURL(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.webkit.WebView';mthd: 'loadDataWithBaseURL';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'java.lang.String' '\" +objectToString(p3)+ \"' 'java.lang.String' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "loadDataWithBaseURL",
			"paramList": [
				"java.lang.String",
				"java.lang.String",
				"java.lang.String",
				"java.lang.String",
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_webkit_WebView_loadDataWithBaseURL_336(Object _this , java.lang.String p0, java.lang.String p1, java.lang.String p2, java.lang.String p3, java.lang.String p4)"
		},
		{
			"className": "android.webkit.WebView",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.webkit.WebView->loadUrl",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/webkit/WebView;->loadUrl(Ljava/lang/String;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.webkit.WebView';mthd: 'loadUrl';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "loadUrl",
			"paramList": [
				"java.lang.String"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_webkit_WebView_loadUrl_337(Object _this , java.lang.String p0)"
		},
		{
			"className": "android.webkit.WebView",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.webkit.WebView->loadUrl",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/webkit/WebView;->loadUrl(Ljava/lang/String;Ljava/util/Map;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.webkit.WebView';mthd: 'loadUrl';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.util.Map' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "loadUrl",
			"paramList": [
				"java.lang.String",
				"java.util.Map"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_webkit_WebView_loadUrl_338(Object _this , java.lang.String p0, java.util.Map p1)"
		},
		{
			"className": "android.telephony.SmsManager",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.telephony.SmsManager->sendTextMessage",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.telephony.SmsManager';mthd: 'sendTextMessage';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'android.app.PendingIntent' '\" +objectToString(p3)+ \"' 'android.app.PendingIntent' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "sendTextMessage",
			"paramList": [
				"java.lang.String",
				"java.lang.String",
				"java.lang.String",
				"android.app.PendingIntent",
				"android.app.PendingIntent"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_telephony_SmsManager_sendTextMessage_343(Object _this , java.lang.String p0, java.lang.String p1, java.lang.String p2, android.app.PendingIntent p3, android.app.PendingIntent p4)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/net/Proxy;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.net.Proxy' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.Proxy"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_384(Object _this , java.net.Proxy p0)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/lang/String;ILjava/net/InetAddress;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'java.net.InetAddress' '\" +objectToString(p2)+ \"' 'int' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.lang.String",
				"int",
				"java.net.InetAddress",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_390(Object _this , java.lang.String p0, int p1, java.net.InetAddress p2, int p3)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/lang/String;IZ)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'boolean' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.lang.String",
				"int",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_393(Object _this , java.lang.String p0, int p1, boolean p2)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/net/InetAddress;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.net.InetAddress' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.InetAddress",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_396(Object _this , java.net.InetAddress p0, int p1)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.net.InetAddress' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'java.net.InetAddress' '\" +objectToString(p2)+ \"' 'int' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.InetAddress",
				"int",
				"java.net.InetAddress",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_399(Object _this , java.net.InetAddress p0, int p1, java.net.InetAddress p2, int p3)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;-><init>(Ljava/net/InetAddress;IZ)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: '<init>';retCls: 'void';params: 'java.net.InetAddress' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"' 'boolean' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.InetAddress",
				"int",
				"boolean"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket__ctor_402(Object _this , java.net.InetAddress p0, int p1, boolean p2)"
		},
		{
			"className": "java.net.Socket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.Socket->connect",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/Socket;->connect(Ljava/net/SocketAddress;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.Socket';mthd: 'connect';retCls: 'void';params: 'java.net.SocketAddress' '\" +objectToString(p0)+ \"' 'int' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "connect",
			"paramList": [
				"java.net.SocketAddress",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_Socket_connect_412(Object _this , java.net.SocketAddress p0, int p1)"
		},
		{
			"className": "java.net.DatagramSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.DatagramSocket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/DatagramSocket;-><init>(I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.DatagramSocket';mthd: '<init>';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_DatagramSocket__ctor_417(Object _this , int p0)"
		},
		{
			"className": "java.net.DatagramSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.DatagramSocket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/DatagramSocket;-><init>(ILjava/net/InetAddress;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.DatagramSocket';mthd: '<init>';retCls: 'void';params: 'int' '\" +objectToString(p0)+ \"' 'java.net.InetAddress' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"int",
				"java.net.InetAddress"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_DatagramSocket__ctor_420(Object _this , int p0, java.net.InetAddress p1)"
		},
		{
			"className": "java.net.DatagramSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.DatagramSocket-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/DatagramSocket;-><init>(Ljava/net/SocketAddress;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.DatagramSocket';mthd: '<init>';retCls: 'void';params: 'java.net.SocketAddress' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.SocketAddress"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_DatagramSocket__ctor_422(Object _this , java.net.SocketAddress p0)"
		},
		{
			"className": "java.net.DatagramSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.DatagramSocket->connect",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/DatagramSocket;->connect(Ljava/net/SocketAddress;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.DatagramSocket';mthd: 'connect';retCls: 'void';params: 'java.net.SocketAddress' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "connect",
			"paramList": [
				"java.net.SocketAddress"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_DatagramSocket_connect_428(Object _this , java.net.SocketAddress p0)"
		},
		{
			"className": "java.net.MulticastSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.MulticastSocket->joinGroup",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/MulticastSocket;->joinGroup(Ljava/net/InetAddress;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.MulticastSocket';mthd: 'joinGroup';retCls: 'void';params: 'java.net.InetAddress' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "joinGroup",
			"paramList": [
				"java.net.InetAddress"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_MulticastSocket_joinGroup_440(Object _this , java.net.InetAddress p0)"
		},
		{
			"className": "java.net.MulticastSocket",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.MulticastSocket->joinGroup",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/MulticastSocket;->joinGroup(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.MulticastSocket';mthd: 'joinGroup';retCls: 'void';params: 'java.net.SocketAddress' '\" +objectToString(p0)+ \"' 'java.net.NetworkInterface' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "joinGroup",
			"paramList": [
				"java.net.SocketAddress",
				"java.net.NetworkInterface"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_MulticastSocket_joinGroup_441(Object _this , java.net.SocketAddress p0, java.net.NetworkInterface p1)"
		},
		{
			"className": "java.net.URL",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.URL-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/URL;-><init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.URL';mthd: '<init>';retCls: 'void';params: 'java.net.URL' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'java.net.URLStreamHandler' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.net.URL",
				"java.lang.String",
				"java.net.URLStreamHandler"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_URL__ctor_454(Object _this , java.net.URL p0, java.lang.String p1, java.net.URLStreamHandler p2)"
		},
		{
			"className": "java.net.URL",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.URL-><init>",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/URL;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.URL';mthd: '<init>';retCls: 'void';params: 'java.lang.String' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'int' '\" +objectToString(p2)+ \"' 'java.lang.String' '\" +objectToString(p3)+ \"' 'java.net.URLStreamHandler' '\" +objectToString(p4)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "<init>",
			"paramList": [
				"java.lang.String",
				"java.lang.String",
				"int",
				"java.lang.String",
				"java.net.URLStreamHandler"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_URL__ctor_462(Object _this , java.lang.String p0, java.lang.String p1, int p2, java.lang.String p3, java.net.URLStreamHandler p4)"
		},
		{
			"className": "java.net.URL",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.URL->openConnection",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this);\n        return (java.net.URLConnection)  (java.net.URLConnection) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/URL;->openConnection()Ljava/net/URLConnection;",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.URL';mthd: 'openConnection';retCls: 'java.net.URLConnection';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openConnection",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "java.net.URLConnection",
			"signature": "redir_java_net_URL_openConnection_467(Object _this )"
		},
		{
			"className": "java.net.URL",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.URL->openConnection",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (java.net.URLConnection)  (java.net.URLConnection) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/URL;->openConnection(Ljava/net/Proxy;)Ljava/net/URLConnection;",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.URL';mthd: 'openConnection';retCls: 'java.net.URLConnection';params: 'java.net.Proxy' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openConnection",
			"paramList": [
				"java.net.Proxy"
			],
			"platformVersion": "All",
			"returnType": "java.net.URLConnection",
			"signature": "redir_java_net_URL_openConnection_468(Object _this , java.net.Proxy p0)"
		},
		{
			"className": "java.net.URLConnection",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "java.net.URLConnection->connect",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this);\n    ",
			"isStatic": false,
			"jniSignature": "Ljava/net/URLConnection;->connect()V",
			"logID": " \"TId: \"+threadId+\";objCls: 'java.net.URLConnection';mthd: 'connect';retCls: 'void';params: ;stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "connect",
			"paramList": [],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_java_net_URLConnection_connect_481(Object _this )"
		},
		{
			"className": "org.apache.http.impl.client.AbstractHttpClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "org.apache.http.impl.client.AbstractHttpClient->execute",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (org.apache.http.HttpResponse)  (org.apache.http.HttpResponse) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Lorg/apache/http/impl/client/AbstractHttpClient;->execute(Lorg/apache/http/HttpHost;Lorg/apache/http/HttpRequest;Lorg/apache/http/protocol/HttpContext;)Lorg/apache/http/HttpResponse;",
			"logID": " \"TId: \"+threadId+\";objCls: 'org.apache.http.impl.client.AbstractHttpClient';mthd: 'execute';retCls: 'org.apache.http.HttpResponse';params: 'org.apache.http.HttpHost' '\" +objectToString(p0)+ \"' 'org.apache.http.HttpRequest' '\" +objectToString(p1)+ \"' 'org.apache.http.protocol.HttpContext' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "execute",
			"paramList": [
				"org.apache.http.HttpHost",
				"org.apache.http.HttpRequest",
				"org.apache.http.protocol.HttpContext"
			],
			"platformVersion": "All",
			"returnType": "org.apache.http.HttpResponse",
			"signature": "redir_org_apache_http_impl_client_AbstractHttpClient_execute_521(Object _this , org.apache.http.HttpHost p0, org.apache.http.HttpRequest p1, org.apache.http.protocol.HttpContext p2)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->bulkInsert",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->bulkInsert(Landroid/net/Uri;[Landroid/content/ContentValues;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'bulkInsert';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues[]' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "bulkInsert",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentResolver_bulkInsert_548(Object _this , android.net.Uri p0, android.content.ContentValues[] p1)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->delete",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'delete';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'java.lang.String[]' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "delete",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"java.lang.String[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentResolver_delete_549(Object _this , android.net.Uri p0, java.lang.String p1, java.lang.String[] p2)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->insert",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (android.net.Uri)  (android.net.Uri) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'insert';retCls: 'android.net.Uri';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "insert",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues"
			],
			"platformVersion": "All",
			"returnType": "android.net.Uri",
			"signature": "redir_android_content_ContentResolver_insert_550(Object _this , android.net.Uri p0, android.content.ContentValues p1)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->update",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'update';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'java.lang.String[]' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "update",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues",
				"java.lang.String",
				"java.lang.String[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentResolver_update_551(Object _this , android.net.Uri p0, android.content.ContentValues p1, java.lang.String p2, java.lang.String[] p3)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->openInputStream",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0);\n        return (java.io.InputStream)  (java.io.InputStream) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->openInputStream(Landroid/net/Uri;)Ljava/io/InputStream;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'openInputStream';retCls: 'java.io.InputStream';params: 'android.net.Uri' '\" +objectToString(p0)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openInputStream",
			"paramList": [
				"android.net.Uri"
			],
			"platformVersion": "All",
			"returnType": "java.io.InputStream",
			"signature": "redir_android_content_ContentResolver_openInputStream_552(Object _this , android.net.Uri p0)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->openAssetFileDescriptor",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (android.content.res.AssetFileDescriptor)  (android.content.res.AssetFileDescriptor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->openAssetFileDescriptor(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'openAssetFileDescriptor';retCls: 'android.content.res.AssetFileDescriptor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openAssetFileDescriptor",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.content.res.AssetFileDescriptor",
			"signature": "redir_android_content_ContentResolver_openAssetFileDescriptor_560(Object _this , android.net.Uri p0, java.lang.String p1, android.os.CancellationSignal p2)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->query",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4, p5);\n        return (android.database.Cursor)  (android.database.Cursor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'query';retCls: 'android.database.Cursor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String[]' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'java.lang.String[]' '\" +objectToString(p3)+ \"' 'java.lang.String' '\" +objectToString(p4)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p5)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "query",
			"paramList": [
				"android.net.Uri",
				"java.lang.String[]",
				"java.lang.String",
				"java.lang.String[]",
				"java.lang.String",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.database.Cursor",
			"signature": "redir_android_content_ContentResolver_query_563(Object _this , android.net.Uri p0, java.lang.String[] p1, java.lang.String p2, java.lang.String[] p3, java.lang.String p4, android.os.CancellationSignal p5)"
		},
		{
			"className": "android.content.ContentResolver",
			"defaultReturnValue": "",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentResolver->registerContentObserver",
			"invokeAPICode": "\n         OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentResolver';mthd: 'registerContentObserver';retCls: 'void';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'boolean' '\" +objectToString(p1)+ \"' 'android.database.ContentObserver' '\" +objectToString(p2)+ \"' 'int' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "registerContentObserver",
			"paramList": [
				"android.net.Uri",
				"boolean",
				"android.database.ContentObserver",
				"int"
			],
			"platformVersion": "All",
			"returnType": "void",
			"signature": "redir_android_content_ContentResolver_registerContentObserver_566(Object _this , android.net.Uri p0, boolean p1, android.database.ContentObserver p2, int p3)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->bulkInsert",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->bulkInsert(Landroid/net/Uri;[Landroid/content/ContentValues;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'bulkInsert';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues[]' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "bulkInsert",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentProviderClient_bulkInsert_571(Object _this , android.net.Uri p0, android.content.ContentValues[] p1)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->delete",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'delete';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'java.lang.String[]' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "delete",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"java.lang.String[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentProviderClient_delete_572(Object _this , android.net.Uri p0, java.lang.String p1, java.lang.String[] p2)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->insert",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1);\n        return (android.net.Uri)  (android.net.Uri) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'insert';retCls: 'android.net.Uri';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues' '\" +objectToString(p1)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "insert",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues"
			],
			"platformVersion": "All",
			"returnType": "android.net.Uri",
			"signature": "redir_android_content_ContentProviderClient_insert_573(Object _this , android.net.Uri p0, android.content.ContentValues p1)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "0",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->update",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n        return (Integer)  (Integer) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'update';retCls: 'int';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'android.content.ContentValues' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'java.lang.String[]' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "update",
			"paramList": [
				"android.net.Uri",
				"android.content.ContentValues",
				"java.lang.String",
				"java.lang.String[]"
			],
			"platformVersion": "All",
			"returnType": "int",
			"signature": "redir_android_content_ContentProviderClient_update_574(Object _this , android.net.Uri p0, android.content.ContentValues p1, java.lang.String p2, java.lang.String[] p3)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->openFile",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (android.os.ParcelFileDescriptor)  (android.os.ParcelFileDescriptor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->openFile(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'openFile';retCls: 'android.os.ParcelFileDescriptor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openFile",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.os.ParcelFileDescriptor",
			"signature": "redir_android_content_ContentProviderClient_openFile_578(Object _this , android.net.Uri p0, java.lang.String p1, android.os.CancellationSignal p2)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->openAssetFile",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2);\n        return (android.content.res.AssetFileDescriptor)  (android.content.res.AssetFileDescriptor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->openAssetFile(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'openAssetFile';retCls: 'android.content.res.AssetFileDescriptor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p2)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openAssetFile",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.content.res.AssetFileDescriptor",
			"signature": "redir_android_content_ContentProviderClient_openAssetFile_580(Object _this , android.net.Uri p0, java.lang.String p1, android.os.CancellationSignal p2)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->openTypedAssetFileDescriptor",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3);\n        return (android.content.res.AssetFileDescriptor)  (android.content.res.AssetFileDescriptor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->openTypedAssetFileDescriptor(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'openTypedAssetFileDescriptor';retCls: 'android.content.res.AssetFileDescriptor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String' '\" +objectToString(p1)+ \"' 'android.os.Bundle' '\" +objectToString(p2)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p3)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "openTypedAssetFileDescriptor",
			"paramList": [
				"android.net.Uri",
				"java.lang.String",
				"android.os.Bundle",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.content.res.AssetFileDescriptor",
			"signature": "redir_android_content_ContentProviderClient_openTypedAssetFileDescriptor_581(Object _this , android.net.Uri p0, java.lang.String p1, android.os.Bundle p2, android.os.CancellationSignal p3)"
		},
		{
			"className": "android.content.ContentProviderClient",
			"defaultReturnValue": "null",
			"exceptionType": "SecurityException",
			"hookedMethod": "android.content.ContentProviderClient->query",
			"invokeAPICode": "\n        Object returnVal =  OriginalMethod.by(new $() {}).invoke (_this, p0, p1, p2, p3, p4, p5);\n        return (android.database.Cursor)  (android.database.Cursor) returnVal;\n    ",
			"isStatic": false,
			"jniSignature": "Landroid/content/ContentProviderClient;->query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;",
			"logID": " \"TId: \"+threadId+\";objCls: 'android.content.ContentProviderClient';mthd: 'query';retCls: 'android.database.Cursor';params: 'android.net.Uri' '\" +objectToString(p0)+ \"' 'java.lang.String[]' '\" +objectToString(p1)+ \"' 'java.lang.String' '\" +objectToString(p2)+ \"' 'java.lang.String[]' '\" +objectToString(p3)+ \"' 'java.lang.String' '\" +objectToString(p4)+ \"' 'android.os.CancellationSignal' '\" +objectToString(p5)+ \"';stacktrace: '\"+stackTrace+\"\\'\"  ",
			"methodName": "query",
			"paramList": [
				"android.net.Uri",
				"java.lang.String[]",
				"java.lang.String",
				"java.lang.String[]",
				"java.lang.String",
				"android.os.CancellationSignal"
			],
			"platformVersion": "All",
			"returnType": "android.database.Cursor",
			"signature": "redir_android_content_ContentProviderClient_query_585(Object _this , android.net.Uri p0, java.lang.String[] p1, java.lang.String p2, java.lang.String[] p3, java.lang.String p4, android.os.CancellationSignal p5)"
		}
	]
}